# Generated by Django 4.1.3 on 2022-11-17 07:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('age', models.IntegerField()),
            ],
            options={
                'db_table': 'ACTOR_INFO',
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=60, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('poster_image', models.ImageField(blank=True, max_length=1000, null=True, upload_to='images/')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('actors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie_app.actor')),
                ('genres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie_app.genres')),
            ],
            options={
                'db_table': 'MOVIE_INFO',
            },
        ),
        migrations.AddField(
            model_name='actor',
            name='movies',
            field=models.ManyToManyField(to='movie_app.movie'),
        ),
    ]
